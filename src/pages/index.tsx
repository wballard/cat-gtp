import MessageDisplay from "@/components/message";
import { useMessages } from "@/model/messages";
import styles from "@/styles/Home.module.css";
import SendIcon from "@mui/icons-material/Send";
import {
  Box,
  Button,
  Divider,
  Grid,
  Input,
  LinearProgress,
  Stack,
} from "@mui/joy";
import Head from "next/head";
import React from "react";

export default function Home() {
  const [query, setQuery] = React.useState("");
  const { loading, messages, humanAsks } = useMessages();

  return (
    <>
      <Head>
        <title>CatGPT üêà</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Grid
        container
        spacing={2}
        sx={{
          flexGrow: 1,
          width: 1,
          height: 1,
          margin: 0,
          maxHeight: 1,
          maxWidth: 1,
        }}
      >
        <Grid className={styles.sidebar} xs={2} sx={{ height: 1 }}></Grid>
        <Grid xs={10} sx={{ display: "flex", height: 1, padding: 0 }}>
          <Box sx={{ display: "flex", flexDirection: "column", flex: 1 }}>
            {loading && <LinearProgress sx={{ maxHeight: "1em" }} />}
            <Stack sx={{ width: 1, flex: "1 1 auto", overflowY: "scroll" }}>
              {messages.map((message, i) => {
                return (
                  <Box key={i}>
                    <MessageDisplay
                      message={message}
                      index={i}
                      scrollToMe={i === messages.length - 1}
                    />
                    <Divider />
                  </Box>
                );
              })}
            </Stack>
            <Box sx={{ display: "flex", justifyContent: "center", padding: 2 }}>
              <Input
                sx={{
                  boxShadow: "sm",
                  flex: 1,
                  maxWidth: "40em",
                }}
                endDecorator={
                  <Button variant="plain">
                    <SendIcon />
                  </Button>
                }
                value={query}
                onChange={(e) => {
                  setQuery(e.target.value);
                }}
                onKeyUp={(e) => {
                  if (e.key === "Enter" && !loading && query.length) {
                    humanAsks(query);
                    setQuery("");
                  }
                }}
                placeholder="Chat with the cat..."
              />
            </Box>
          </Box>
        </Grid>
      </Grid>
    </>
  );
}
